lista.frames[1]
lista.frames[[2]] <- 2
lista.frames
gc()
head(vid.2)
class(vid.2)
length(vid.2)
dim(vid.2[[1]])
dim(vid.2[[2]])
vid.2[[1]][1,1:10]
vid.2[[1]][1,1:100]
vid <- read.csv(file = "/Users/Arturo/Desktop/Kaggle/CHALEARN/data/devel04/csvs/M_1.csv", #
    header = F)#
#
names(vid) <- c("frame", paste("R", 1:320, sep = "__"),#
    paste("G", 1:320, sep = "__"),#
    paste("B", 1:320, sep = "__"))#
vid$y <- rep(1:240, times = 53)#
#
gc()#
vid.1 <- melt(vid, id.vars = c("frame", "y"))#
rm(vid)#
gc()#
#
vid.1$color <- substr(vid.1$variable, 1, 1)#
vid.1$x <- gsub(".__","",vid.1$variable)#
vid.1$variable <- NULL#
gc()
library(reshape)
vid <- read.csv(file = "/Users/Arturo/Desktop/Kaggle/CHALEARN/data/devel04/csvs/M_1.csv", #
    header = F)#
#
names(vid) <- c("frame", paste("R", 1:320, sep = "__"),#
    paste("G", 1:320, sep = "__"),#
    paste("B", 1:320, sep = "__"))#
vid$y <- rep(1:240, times = 53)#
#
gc()#
vid.1 <- melt(vid, id.vars = c("frame", "y"))#
rm(vid)#
gc()#
#
vid.1$color <- substr(vid.1$variable, 1, 1)#
vid.1$x <- gsub(".__","",vid.1$variable)#
vid.1$variable <- NULL#
gc()
lista.frames <- list()#
system.time(#
for(frame.int in 1:53){#
    vid.sub <- vid.1[vid.1$frame==frame.int,]#
    lista.frames[[frame.int]] <- cast(vid.sub, frame ~ color + x + y,#
        fun.aggregate = "identity", value = "value")#
    rm(vid.sub)#
}#
)
608/60
ls()
rm(list=ls())
system.time(#
#
vid <- read.csv(file = "/Users/Arturo/Desktop/Kaggle/CHALEARN/data/devel04/csvs/M_1.csv", #
    header = F)#
#
names(vid) <- c("frame", paste("R", 1:320, sep = "__"),#
    paste("G", 1:320, sep = "__"),#
    paste("B", 1:320, sep = "__"))#
vid$y <- rep(1:240, times = 53)#
#
gc()#
vid.1 <- melt(vid, id.vars = c("frame", "y"))#
rm(vid)#
gc()#
#
vid.1$color <- substr(vid.1$variable, 1, 1)#
vid.1$x <- gsub(".__","",vid.1$variable)#
vid.1$variable <- NULL#
gc()#
#
vid.2 <- dlply(vid.1, "frame", function(vid.sub){#
    cast(vid.sub, frame ~ color + x + y,#
        fun.aggregate = "identity", value = "value")#
}, .progress = "text")#
#
rm(vid.1)#
#
vid.3 <- Reduce(rbind, vid.2)#
)
library(reshape)
system.time(#
#
vid <- read.csv(file = "/Users/Arturo/Desktop/Kaggle/CHALEARN/data/devel04/csvs/M_1.csv", #
    header = F)#
#
names(vid) <- c("frame", paste("R", 1:320, sep = "__"),#
    paste("G", 1:320, sep = "__"),#
    paste("B", 1:320, sep = "__"))#
vid$y <- rep(1:240, times = 53)#
#
gc()#
vid.1 <- melt(vid, id.vars = c("frame", "y"))#
rm(vid)#
gc()#
#
vid.1$color <- substr(vid.1$variable, 1, 1)#
vid.1$x <- gsub(".__","",vid.1$variable)#
vid.1$variable <- NULL#
gc()#
#
vid.2 <- dlply(vid.1, "frame", function(vid.sub){#
    cast(vid.sub, frame ~ color + x + y,#
        fun.aggregate = "identity", value = "value")#
}, .progress = "text")#
#
rm(vid.1)#
#
vid.3 <- Reduce(rbind, vid.2)#
)
system.time(#
#
vid <- read.csv(file = "/Users/Arturo/Desktop/Kaggle/CHALEARN/data/devel04/csvs/M_1.csv", #
    header = F)#
#
names(vid) <- c("frame", paste("R", 1:320, sep = "__"),#
    paste("G", 1:320, sep = "__"),#
    paste("B", 1:320, sep = "__"))#
vid$y <- rep(1:240, times = 53)#
#
gc()#
vid.1 <- melt(vid, id.vars = c("frame", "y"))#
rm(vid)#
gc()#
#
vid.1$color <- substr(vid.1$variable, 1, 1)#
vid.1$x <- gsub(".__","",vid.1$variable)#
vid.1$variable <- NULL#
gc()#
#
vid.2 <- dlply(vid.1, "frame", function(vid.sub){#
    cast(vid.sub, frame ~ color + x + y,#
        fun.aggregate = "identity", value = "value")#
}, .progress = "text")#
#
rm(vid.1)#
#
vid.3 <- Reduce(rbind, vid.2)#
#
)
system.time(vid <- #
    read.csv(file = "/Users/Arturo/Desktop/Kaggle/CHALEARN/data/devel04/csvs/M_1.csv", #
    header = F)#
#
names(vid) <- c("frame", paste("R", 1:320, sep = "__"),#
    paste("G", 1:320, sep = "__"),#
    paste("B", 1:320, sep = "__"))#
vid$y <- rep(1:240, times = 53)#
#
gc()#
vid.1 <- melt(vid, id.vars = c("frame", "y"))#
rm(vid)#
gc()#
#
vid.1$color <- substr(vid.1$variable, 1, 1)#
vid.1$x <- gsub(".__","",vid.1$variable)#
vid.1$variable <- NULL#
gc()#
#
vid.2 <- dlply(vid.1, "frame", function(vid.sub){#
    cast(vid.sub, frame ~ color + x + y,#
        fun.aggregate = "identity", value = "value")#
}, .progress = "text")#
#
rm(vid.1)#
#
vid.3 <- Reduce(rbind, vid.2))
vid <- #
    read.csv(file = "/Users/Arturo/Desktop/Kaggle/CHALEARN/data/devel04/csvs/M_1.csv", #
    header = F)#
#
names(vid) <- c("frame", paste("R", 1:320, sep = "__"),#
    paste("G", 1:320, sep = "__"),#
    paste("B", 1:320, sep = "__"))#
vid$y <- rep(1:240, times = 53)#
#
gc()#
vid.1 <- melt(vid, id.vars = c("frame", "y"))#
rm(vid)#
gc()#
#
vid.1$color <- substr(vid.1$variable, 1, 1)#
vid.1$x <- gsub(".__","",vid.1$variable)#
vid.1$variable <- NULL#
gc()#
#
vid.2 <- dlply(vid.1, "frame", function(vid.sub){#
    cast(vid.sub, frame ~ color + x + y,#
        fun.aggregate = "identity", value = "value")#
}, .progress = "text")#
#
rm(vid.1)#
#
vid.3 <- Reduce(rbind, vid.2)
system.time(#
    vid <- #
        read.csv(file = "/Users/Arturo/Desktop/Kaggle/CHALEARN/data/devel04/csvs/M_1.csv", #
        header = F)#
#
    names(vid) <- c("frame", paste("R", 1:320, sep = "__"),#
        paste("G", 1:320, sep = "__"),#
        paste("B", 1:320, sep = "__"))#
    vid$y <- rep(1:240, times = 53)#
#
    gc()#
    vid.1 <- melt(vid, id.vars = c("frame", "y"))#
    rm(vid)#
    gc()#
#
    vid.1$color <- substr(vid.1$variable, 1, 1)#
    vid.1$x <- gsub(".__","",vid.1$variable)#
    vid.1$variable <- NULL#
    gc()#
#
    vid.2 <- dlply(vid.1, "frame", function(vid.sub){#
        cast(vid.sub, frame ~ color + x + y,#
            fun.aggregate = "identity", value = "value")#
    }, .progress = "text")#
#
    rm(vid.1)#
    gc()#
    vid.3 <- Reduce(rbind, vid.2)#
)
c("frame", paste("R", 1:320, sep = "__"),#
        paste("G", 1:320, sep = "__"),#
        paste("B", 1:320, sep = "__"))
vid <- #
    read.csv(file = "/Users/Arturo/Desktop/Kaggle/CHALEARN/data/devel04/csvs/M_1.csv", #
    header = F)#
#
names(vid) <- c("frame", paste("R", 1:320, sep = "__"),#
    paste("G", 1:320, sep = "__"),#
    paste("B", 1:320, sep = "__"))#
#
vid$y <- rep(1:240, times = 53)#
#
gc()#
vid.1 <- melt(vid, id.vars = c("frame", "y"))#
rm(vid)#
gc()#
#
vid.1$color <- substr(vid.1$variable, 1, 1)#
vid.1$x <- gsub(".__","",vid.1$variable)#
vid.1$variable <- NULL#
gc()#
#
vid.2 <- dlply(vid.1, "frame", function(vid.sub){#
    cast(vid.sub, frame ~ color + x + y,#
        fun.aggregate = "identity", value = "value")#
}, .progress = "text")#
#
rm(vid.1)#
gc()#
vid.3 <- Reduce(rbind, vid.2)
dim(vid.3)
ls()
rm(vid.2)
gc()
load("/Users/Arturo/Desktop/Kaggle/CHALEARN/cache/dev01.vid01.rgb.RData")
vignette("gettingstartedMC")
/Users/Arturo/Desktop/Kaggle/CHALEARN/cache/dev01.vid01.prof.Rdata
"/Users/Arturo/Desktop/Kaggle/CHALEARN/cache/dev01.vid01.prof.Rdata"
load("/Users/Arturo/Desktop/Kaggle/CHALEARN/cache/dev01.vid01.prof.Rdata")
vid <- dev01.vid01.prof#
comps <- prcomp(vid[,-1], cor = T)
comps
str(comps)
comps$sdev
vid[1:10,1:10]
vid[1:10,1:100]
sapply(vid[,-1], function(int){length(unique(int))})
table(sapply(vid[,-1], function(int){length(unique(int))}))
dim(vid)
library(blmer)
install.packages("blmer")
install.packages("lmer")
install.packages("lmer4")
library(lme4)
?blmer
?lmer
library(arm)
?blmer
blmer
bglmer
??lme4
lme4
library(lme4)
?blme
?blmer
library(blme)
install.packages("blme")
?blme
?blmer
library(blme)
?bglmer
library(glmnet)
?glmnet
plot(5:20, errores, type = "l")
datos.prueba <- read.csv(/Users/Arturo/Kaggle/Bonos/data/dataCSV/test.csv)
datos.prueba <- read.csv("/Users/Arturo/Kaggle/Bonos/data/dataCSV/test.csv")
dim(datos.prueba)
head(datos.prueba)
sapply(datos.prueba, function(int){sum(is.na(int))})
round(sapply(datos.prueba, function(int){sum(is.na(int))})/nrow(datos.prueba)*100)
datos.ent <- read.csv("/Users/Arturo/Kaggle/Bonos/data/dataCSV/train.csv")
lsos()
ls()
rm(datos.prueba)
gc()
head(datos.ent)
length(datos.ent$id)
length(unique(datos.ent$id))
log(1)
library(twitteR)
Tweets <- userTimeline('arturosaco')
Tweets
tweets <- userTimeline('reginarbm')
twwets
tweets
tweets <- userTimeline('rodrno')
tweets
tweets <- searchTwitter('Woody Allen', n=50)
tweets
searchTwitter
?searTwitter
?searchTwitter
tweets <- searchTwitter('JVM', n=50)
tweets
tweets <- searchTwitter('macariomx', n=50)
tweets
tweets <- searchTwitter('@reginarbm', n=50)
tweets
tweets <- searchTwitter('reginarbm', n=50)
tweets
tweets <- searchTwitter('arturosaco', n=50)
tweets
pred.gbm <- predict(mod.gbm, newdata = as.matrix(test),#
    n.trees = 5000, type = "response")#
#
write.table(pred.gbm, file = "predictions/pred_gbm.csv", row.names = F, col.names = F)
train[, 1]
mod.gbm <- gbm.fit(x = as.matrix(train[, -1]), y = train[, 1],#
    n.trees = 5000, interaction.depth = 3, shrinkage = 0.1,#
    distribution = "bernoulli",#
    keep.data = F)
n.trees = 5000, type = "response")#
#
write.table(pred.gbm, file = "predictions/pred_gbm.csv", row.names = F, col.names = F)
pred.gbm <- predict(mod.gbm, newdata = as.matrix(test),#
    n.trees = 1000, type = "response")#
#
write.table(pred.gbm, file = "predictions/pred_gbm.csv", row.names = F, col.names = F)
formu <- as.formula(paste(names(train)[1], " ~ ", paste(names(train)[-1], collapse = " + ")))
tweets <- searchTwitter('arturosaco', n=50)#
df <- twListToDF(tweets)
df
dim(DF)
dim(df)
names(df)
sapply(df,class)
install.packages("Sweave")
?install.packages
install.packages("Sweave", type = "source")
library(Sweave)
registerDoMC(4)
25000*100
25000*100/15
166666.7 * 13
setwd('/Users/Arturo/Dropbox/Codigo random/Encuestas/src')
library('ProjectTemplate')
setwd('/Users/Arturo/Dropbox/Codigo random/Encuestas')
load.project()#
#
datos <- X1jun#
datos$Error <- as.numeric(gsub("[^0-9\\.]", "", datos$Error))#
datos$del <- as.Date(datos$del, "%d/%m/%y")#
datos$al <- as.Date(datos$al, "%d/%m/%y")#
datos$ID <- 1:nrow(datos)#
datos.aux <- ddply(datos, "ID", function(sub){#
    data.frame(fecha = seq(from = sub$del, to = sub$al, by = 1),#
    sub[,!names(sub) %in% c("del", "al")], row.names = NULL)#
})#
#
datos.1 <- melt(datos.aux[,#
    c("fecha", "Encuesta", "Muestra", "EPN", "JVM", "AMLO", "GQ", "NR")],#
    id.vars = c("fecha", "Encuesta", "Muestra"))#
datos.1[datos.1$value == "ND", 'value'] <- NA#
datos.1$value <- as.numeric(datos.1$value)#
datos.1$Muestra <- as.numeric(datos.1$Muestra)    #
#
datos.1 <- ddply(datos.1, c("fecha", "variable"), transform, muestra.tot = sum(Muestra, na.rm = T))#
datos.1$w <- datos.1$Muestra / datos.1$muestra.tot#
#
datos.2 <- ddply(datos.1, c("fecha", "variable"), summarise,#
    prom = sum(value * w, na.rm = T),#
    prom.mod = sum(value * w, na.rm = T))
install.packages("gdata")
load.project()#
#
datos <- X1jun#
datos$Error <- as.numeric(gsub("[^0-9\\.]", "", datos$Error))#
datos$del <- as.Date(datos$del, "%d/%m/%y")#
datos$al <- as.Date(datos$al, "%d/%m/%y")#
datos$ID <- 1:nrow(datos)#
datos.aux <- ddply(datos, "ID", function(sub){#
    data.frame(fecha = seq(from = sub$del, to = sub$al, by = 1),#
    sub[,!names(sub) %in% c("del", "al")], row.names = NULL)#
})#
#
datos.1 <- melt(datos.aux[,#
    c("fecha", "Encuesta", "Muestra", "EPN", "JVM", "AMLO", "GQ", "NR")],#
    id.vars = c("fecha", "Encuesta", "Muestra"))#
datos.1[datos.1$value == "ND", 'value'] <- NA#
datos.1$value <- as.numeric(datos.1$value)#
datos.1$Muestra <- as.numeric(datos.1$Muestra)    #
#
datos.1 <- ddply(datos.1, c("fecha", "variable"), transform, muestra.tot = sum(Muestra, na.rm = T))#
datos.1$w <- datos.1$Muestra / datos.1$muestra.tot#
#
datos.2 <- ddply(datos.1, c("fecha", "variable"), summarise,#
    prom = sum(value * w, na.rm = T),#
    prom.mod = sum(value * w, na.rm = T))
ls()
reload.project()
reload.project()
reload.project()
reload.project()
head(tipoCambio2jun)
class(tipoCambio2jun$Fecha)
tc <- tipoCambio2jun#
tc$Fecha <- as.Date(tc$Fecha, "%d/%m/%y")
head(tc)
tc <- tipoCambio2jun
as.Date(tc$Fecha, "%d/%m/%y")
datos <- X1jun#
datos$Error <- as.numeric(gsub("[^0-9\\.]", "", datos$Error))
datos$del
?as.Date
tc <- tipoCambio2jun
head(tc)
tc$Fecha <- as.Date(gsub("/20", "", tc$Fecha), "%d/%m/%y")
head(tc)
tc <- tipoCambio2jun
gsub("/20", "", tc$Fecha)
as.Date(tc$Fecha, "%d/%m/%y")
tc$Fecha
as.Date(as.character(tc$Fecha), "%d/%m/%y")
as.character(tc$Fecha)
gsub("[0-9]{2,2}([0-9]{2,2})", "\\1", as.character(tc$Fecha))
tc$Fecha <- as.Date(gsub("[0-9]{2,2}([0-9]{2,2})", "\\1", as.character(tc$Fecha)), "%d/%m/%y")
tc$Fecha
as.Date(gsub("[0-9]{2,2}([0-9]{2,2})", "\\1", as.character(tc$Fecha)), "%d/%m/%y")
gsub("[0-9]{2,2}([0-9]{2,2})", "\\1", as.character(tc$Fecha))
datos <- X1jun
datos$del
tc <- tipoCambio2jun#
tc$Fecha <- as.Date(gsub("[0-9]{2,2}([0-9]{2,2})", "\\1", as.character(tc$Fecha)), "%d-%m-%y")
head(tc)
gsub("[0-9]{2,2}([0-9]{2,2})", "\\1", as.character(tc$Fecha))
tc <- tipoCambio2jun
gsub("[0-9]{2,2}([0-9]{2,2})", "\\1", as.character(tc$Fecha))
tc$Fecha <- as.Date(gsub("[0-9]{2,2}([0-9]{2,2})", "\\1", as.character(tc$Fecha)), "%d-%m-%y")
head(tc)
tc <- tipoCambio2jun
tc <- tipoCambio2jun#
tc$Fecha <- as.Date(as.character(tc$Fecha), "%d-%m-%y")
head(tc)
as.character(tc$Fecha)
tc <- tipoCambio2jun
as.character(tc$Fecha)
tc$Fecha <- as.Date(tc$Fecha, "%d-%m-%y")
head(tc)
?as.date
?as.Date
tc <- tipoCambio2jun
tc$Fecha
as.Date(tc$Fecha, "%d/%m/%y")
tc <- tipoCambio2jun#
tc$Fecha <- as.Date(tc$Fecha, "%dd/%mm/%yyyy")
head(tc)
tc <- tipoCambio2jun
head(tc)
as.Date(tc$Fecha, "%d/%m/%y")
tc$Fecha
tc$Fecha <- as.character(tc$Fecha)
as.Date(ts$Fecha, "%d/%m/%y")
as.Date(tc$Fecha, "%d/%m/%y")
tc <- tipoCambio2jun#
tc$Fecha <- as.character(tc$Fecha)
as.Date(tc$Fecha, "%d/%m/%y")
tc$Fecha
tc$Fecha
tc$Fecha
as.Date(tc$Fecha, "%d/%m/%y")
tc$Fecha <- gsub("-", "\", as.character(tc$Fecha))
tc$Fecha <- gsub("-", "/", as.character(tc$Fecha))
head(tc)
tc$Fecha <- as.Date(tc$Fecha, "%d/%m/%y")
head(tc)
head(datos.2)
datos <- X1jun#
datos$Error <- as.numeric(gsub("[^0-9\\.]", "", datos$Error))#
datos$del <- as.Date(datos$del, "%d/%m/%y")#
datos$al <- as.Date(datos$al, "%d/%m/%y")#
datos$ID <- 1:nrow(datos)#
datos.aux <- ddply(datos, "ID", function(sub){#
    data.frame(fecha = seq(from = sub$del, to = sub$al, by = 1),#
    sub[,!names(sub) %in% c("del", "al")], row.names = NULL)#
})#
#
datos.1 <- melt(datos.aux[,#
    c("fecha", "Encuesta", "Muestra", "EPN", "JVM", "AMLO", "GQ", "NR")],#
    id.vars = c("fecha", "Encuesta", "Muestra"))#
datos.1[datos.1$value == "ND", 'value'] <- NA#
datos.1$value <- as.numeric(datos.1$value)#
datos.1$Muestra <- as.numeric(datos.1$Muestra)    #
#
datos.1 <- ddply(datos.1, c("fecha", "variable"), transform, muestra.tot = sum(Muestra, na.rm = T))#
datos.1$w <- datos.1$Muestra / datos.1$muestra.tot#
#
datos.2 <- ddply(datos.1, c("fecha", "variable"), summarise,#
    prom = sum(value * w, na.rm = T),#
    prom.mod = sum(value * w, na.rm = T))#
#
datos.3 <- ddply(datos.2, "fecha", function(sub){#
    sub[sub$variable == "AMLO", 'prom.mod'] <- sub[sub$variable == "AMLO", 'prom.mod'] + #
        sub[sub$variable == "NR", 'prom.mod'] * 1/3#
    sub[sub$variable == "JVM", 'prom.mod'] <- sub[sub$variable == "JVM", 'prom.mod'] + #
        sub[sub$variable == "NR", 'prom.mod'] * 1/3#
    sub[sub$variable == "NR", 'prom.mod'] <- sub[sub$variable == "NR", 'prom.mod'] * 1/3#
    sub#
})
head(datos.2)
tc$fecha <- as.Date(tc$Fecha, "%d/%m/%y")
head(tc)
datos.tc <- join(datos.2[, c("fecha", "variable", "prom")], tc[,c("fecha", "Determinación")], #
 type = "inner")
head(datos.tc)
tc <- tipoCambio2jun#
tc$Fecha <- gsub("-", "/", as.character(tc$Fecha))
as.Date(tc$Fecha, "%d/%m/%y")
tc <- tipoCambio2jun#
tc$Fecha <- gsub("-", "/", as.character(tc$Fecha))
tc$Fecha
datos <- X1jun
datos$del
tc <- tipoCambio2jun#
tc$Fecha <- gsub("-", "/", as.character(tc$Fecha))
head(tc)
reload.project()
datos <- X1jun#
datos$Error <- as.numeric(gsub("[^0-9\\.]", "", datos$Error))#
datos$del <- as.Date(datos$del, "%d/%m/%y")#
datos$al <- as.Date(datos$al, "%d/%m/%y")#
datos$ID <- 1:nrow(datos)#
datos.aux <- ddply(datos, "ID", function(sub){#
    data.frame(fecha = seq(from = sub$del, to = sub$al, by = 1),#
    sub[,!names(sub) %in% c("del", "al")], row.names = NULL)#
})#
#
datos.1 <- melt(datos.aux[,#
    c("fecha", "Encuesta", "Muestra", "EPN", "JVM", "AMLO", "GQ", "NR")],#
    id.vars = c("fecha", "Encuesta", "Muestra"))#
datos.1[datos.1$value == "ND", 'value'] <- NA#
datos.1$value <- as.numeric(datos.1$value)#
datos.1$Muestra <- as.numeric(datos.1$Muestra)    #
#
datos.1 <- ddply(datos.1, c("fecha", "variable"), transform, muestra.tot = sum(Muestra, na.rm = T))#
datos.1$w <- datos.1$Muestra / datos.1$muestra.tot#
#
datos.2 <- ddply(datos.1, c("fecha", "variable"), summarise,#
    prom = sum(value * w, na.rm = T),#
    prom.mod = sum(value * w, na.rm = T))#
#
datos.3 <- ddply(datos.2, "fecha", function(sub){#
    sub[sub$variable == "AMLO", 'prom.mod'] <- sub[sub$variable == "AMLO", 'prom.mod'] + #
        sub[sub$variable == "NR", 'prom.mod'] * 1/3#
    sub[sub$variable == "JVM", 'prom.mod'] <- sub[sub$variable == "JVM", 'prom.mod'] + #
        sub[sub$variable == "NR", 'prom.mod'] * 1/3#
    sub[sub$variable == "NR", 'prom.mod'] <- sub[sub$variable == "NR", 'prom.mod'] * 1/3#
    sub#
})#
names(datos.3)[names(datos.3)== "variable"] <- "candidato"#
datos.4 <- melt(datos.3[datos.3$fecha > "2012-03-01",], id.vars = c("fecha", "candidato"))#
ult.ant <- as.Date("2012-05-16")#
debate <- as.Date("2012-05-06")#
ibero <- as.Date("2012-05-11")#
ggplot(datos.4, aes(x = fecha, y = value, colour = candidato, group = candidato)) + #
    geom_line() + facet_wrap(~variable) + geom_vline(xintercept = as.numeric(ibero)) +#
    facet_wrap(~variable)#
# ===============#
# = correlacion =#
# ===============#
#
tc <- tipoCambio2jun
head(tc)
tc$fecha <- as.Date(tc$Fecha, "%d/%m/%y")
head(tc)
datos.tc <- join(datos.2[, c("fecha", "variable", "prom")], tc[,c("fecha", "Determinación")], #
 type = "inner")
datos.tc <- join(datos.2[, c("fecha", "variable", "prom")], tc[,c("fecha", "Determinacion")], #
 type = "inner")
head(datos.tc)
datos.tc <- join(datos.2[datos.2$fecha > "2012-03-01", c("fecha", "variable", "prom")], tc[,c("fecha", "Determinacion")], #
 type = "inner")
datos.tc <- join(datos.2[datos.2$fecha > "2012-03-01" & datos.2$variable == "AMLO", c("fecha", "variable", "prom")], tc[,c("fecha", "Determinacion")], #
 type = "inner")
head(datos.tc)
omit.na(datos.tc)
na.omit(datos.tc)
cor(na.omit(datos.tc)$prom, na.omit(datos.tc)$Determinacion)
head(datos.tc)
ggplot(datos.tc, aes(x = prom, y = Determinacion)) + geom_point()
ggplot(datos.tc, aes(x = prom, y = Determinacion)) + geom_point() + geom_smooth()
ggplot(datos.tc, aes(x = prom, y = Determinacion)) + geom_point() + geom_smooth(method = "lm")
ggplot(datos.tc, aes(x = prom, y = Determinacion)) + #
    geom_point() + geom_smooth(method = "lm") +#
    xlab("% AMLO") + ylab("TC")
datos.tc <- join(datos.2[datos.2$fecha > "2012-03-01", c("fecha", "variable", "prom")], tc[,c("fecha", "Determinacion")], #
 type = "inner")#
#
ggplot(datos.tc, aes(x = prom, y = Determinacion)) + #
    geom_point() + geom_smooth(method = "lm") +#
    xlab("% AMLO") + ylab("TC") + facet_wrap(~variable)
ggplot(datos.tc, aes(x = prom, y = Determinacion)) + #
    geom_point() + geom_smooth(method = "lm") +#
    xlab("% AMLO") + ylab("TC") + facet_wrap(~variable, ncol = 1)
ggplot(datos.tc, aes(x = Determinacion, y = prom)) + #
    geom_point() + geom_smooth(method = "lm") +#
    xlab("% AMLO") + ylab("TC") + facet_wrap(~variable, ncol = 1)
ggplot(datos.tc, aes(x = prom, y = Determinacion)) + #
    geom_point() + geom_smooth(method = "lm") +#
    xlab("% AMLO") + ylab("TC") + facet_wrap(~variable)
head(datos.tc)
ddply(datos.tc, "variable", cor(prom, Determinacion))
ddply(datos.tc, "variable", cor(prom, Determinacion))
ddply(datos.tc, "variable", summarise, cor(prom, Determinacion))
ddply(datos.tc, "variable", summarise, cor(prom, Determinacion, na.rm = T))
ddply(datos.tc, "variable", summarise, cor(prom, Determinacion))
ddply(na.omit(datos.tc), "variable", summarise, cor(prom, Determinacion))
